C51 COMPILER V9.60.0.0   PCF8574                                                           02/02/2021 11:31:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PCF8574
OBJECT MODULE PLACED IN ..\OBJ\PCF8574.obj
COMPILER INVOKED BY: F:\Program Files (x86)\MDK\C51\BIN\C51.EXE ..\HARDWARE\PCF8574.c LARGE OPTIMIZE(8,SPEED) BROWSE INC
                    -DIR(..\SYSTEM;..\HARDWARE) DEBUG OBJECTEXTEND PRINT(.\Listings\PCF8574.lst) OBJECT(..\OBJ\PCF8574.obj)

line level    source

   1          #include "PCF8574.h"
   2          
   3            sbit SDA=P1^4;             /*模拟I2C数据传送位*/
   4            sbit SCL=P1^5; 
   5            bit  ack;           /*应答标志位*/
   6           
   7          /*******************************************************************
   8                               起动总线函数               
   9          函数原型: void  Start_I2c();  
  10          功能:     启动I2C总线,即发送I2C起始条件.  
  11          ********************************************************************/
  12          void Start_I2c()
  13          {
  14   1              SDA=1;    /*发送起始条件的数据信号*/
  15   1              delay_us(1);
  16   1              SCL=1;
  17   1              delay_us(5);     /*起始条件建立时间大于4.7us,延时*/   
  18   1              SDA=0;    /*发送起始信号*/
  19   1              delay_us(5);     /* 起始条件锁定时间大于4μs*/
  20   1              SCL=0;    /*钳住I2C总线，准备发送或接收数据 */
  21   1              delay_us(2);
  22   1      }
  23          
  24          /*******************************************************************
  25                                结束总线函数               
  26          函数原型: void  Stop_I2c();  
  27          功能:     结束I2C总线,即发送I2C结束条件.  
  28          ********************************************************************/
  29          void Stop_I2c()
  30          {
  31   1              SDA=0;   /*发送结束条件的数据信号*/
  32   1              delay_us(1);   /*发送结束条件的时钟信号*/
  33   1              SCL=1;   /*结束条件建立时间大于4μs*/
  34   1              delay_us(5);
  35   1              SDA=1;   /*发送I2C总线结束信号*/
  36   1              delay_us(4);
  37   1      }
  38          
  39          /*******************************************************************
  40                           字节数据发送函数               
  41          函数原型: void  SendByte(uchar c);
  42          功能:     将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  43                    此状态位进行操作.(不应答或非应答都使ack=0)     
  44                  发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  45          ********************************************************************/
  46          void  SendByte(unsigned char c)
  47          {
  48   1       unsigned char BitCnt;
  49   1       
  50   1       for(BitCnt=0;BitCnt<8;BitCnt++)  /*要传送的数据长度为8位*/
  51   1          {
  52   2           if((c<<BitCnt)&0x80)SDA=1;   /*判断发送位*/
  53   2             else  SDA=0;                
  54   2           delay_us(1);
C51 COMPILER V9.60.0.0   PCF8574                                                           02/02/2021 11:31:49 PAGE 2   

  55   2           SCL=1;               /*置时钟线为高，通知被控器开始接收数据位*/
  56   2           delay_us(6);             /*保证时钟高电平周期大于4μs*/
  57   2           SCL=0; 
  58   2          }
  59   1              delay_us(2);
  60   1          SDA=1;                /*8位发送完后释放数据线，准备接收应答位*/
  61   1          delay_us(2);   
  62   1          SCL=1;
  63   1          delay_us(3);
  64   1          if(SDA==1)ack=0;     
  65   1             else ack=1;        /*判断是否接收到应答信号*/
  66   1          SCL=0;
  67   1          delay_us(2);
  68   1      }
  69          
  70          /*******************************************************************
  71                           字节数据接收函数               
  72          函数原型: uchar  RcvByte();
  73          功能:     用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
  74                    发完后请用应答函数应答从机。  
  75          ********************************************************************/ 
  76          unsigned char  RcvByte()
  77          {
  78   1        unsigned char retc;
  79   1        unsigned char BitCnt;
  80   1        
  81   1        retc=0; 
  82   1        SDA=1;               /*置数据线为输入方式*/
  83   1        for(BitCnt=0;BitCnt<8;BitCnt++)
  84   1            {
  85   2              delay_us(1);           
  86   2              SCL=0;                  /*置时钟线为低，准备接收数据位*/
  87   2              delay_us(5);                /*时钟低电平周期大于4.7μs*/
  88   2              SCL=1;                  /*置时钟线为高使数据线上数据有效*/
  89   2              delay_us(2);
  90   2              retc=retc<<1;
  91   2              if(SDA==1)retc=retc+1;  /*读数据位,接收的数据位放入retc中 */
  92   2              delay_us(2);
  93   2            }
  94   1        SCL=0;    
  95   1        delay_us(2);
  96   1        return(retc);
  97   1      }
  98          
  99          /********************************************************************
 100                               应答子函数
 101          函数原型:  void Ack_I2c(bit a);
 102          功能:      主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 103          ********************************************************************/
 104          void Ack_I2c(bit a)
 105          {
 106   1              if(a==0)SDA=0;           /*在此发出应答或非应答信号 */
 107   1                      else SDA=1;
 108   1              delay_us(3);    
 109   1              SCL=1;
 110   1              delay_us(5);                  /*时钟低电平周期大于4μs*/ 
 111   1              SCL=0;                     /*清时钟线，钳住I2C总线以便继续接收*/
 112   1              delay_us(2);   
 113   1      }
 114          
 115           
 116          
C51 COMPILER V9.60.0.0   PCF8574                                                           02/02/2021 11:31:49 PAGE 3   

 117          /*******************************************************************
 118                           用户接口函数                                   
 119          *******************************************************************/
 120          
 121          
 122          /*******************************************************************
 123                           向无子地址器件发送字节数据函数               
 124          函数原型: bit  ISendByte(uchar sla,ucahr c);  
 125          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 126                    如果返回1表示操作成功，否则操作有误。
 127          注意：    使用前必须已结束总线。
 128          ********************************************************************/
 129          bit ISendByte(unsigned char sla,unsigned char c)
 130          {
 131   1         Start_I2c();               /*启动总线*/
 132   1         SendByte(sla);             /*发送器件地址*/
 133   1         if(ack==0)return(0);
 134   1         SendByte(c);               /*发送数据*/
 135   1         if(ack==0)return(0);
 136   1         Stop_I2c();                /*结束总线*/ 
 137   1         return(1);
 138   1      }
 139          
 140           
 141          
 142          
 143          /*******************************************************************
 144                              向有子地址器件发送多字节数据函数               
 145          函数原型: bit  ISendStr(uchar sla,uchar suba,ucahr *s,uchar no);  
 146          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 147                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 148                    如果返回1表示操作成功，否则操作有误。
 149          注意：    使用前必须已结束总线。
 150          ********************************************************************/
 151          bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 152          {
 153   1         unsigned char i;
 154   1      
 155   1         Start_I2c();               /*启动总线*/
 156   1         SendByte(sla);             /*发送器件地址*/
 157   1         if(ack==0)return(0);
 158   1         SendByte(suba);            /*发送器件子地址*/
 159   1         if(ack==0)return(0);
 160   1      
 161   1         for(i=0;i<no;i++)
 162   1         {   
 163   2           SendByte(*s);            /*发送数据*/
 164   2           if(ack==0)return(0);
 165   2           s++;
 166   2         } 
 167   1         Stop_I2c();                /*结束总线*/ 
 168   1         return(1);
 169   1      }
 170          
 171          
 172          /*******************************************************************
 173                              向无子地址器件发送多字节数据函数               
 174          函数原型: bit  ISendStr(uchar sla,ucahr *s,uchar no);  
 175          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 176                    地址sla，发送内容是s指向的内容，发送no个字节。
 177                    如果返回1表示操作成功，否则操作有误。
 178          注意：    使用前必须已结束总线。
C51 COMPILER V9.60.0.0   PCF8574                                                           02/02/2021 11:31:49 PAGE 4   

 179          ********************************************************************/
 180          bit ISendStrExt(unsigned char sla,unsigned char *s,unsigned char no)
 181          {
 182   1         unsigned char i;
 183   1      
 184   1         Start_I2c();               /*启动总线*/
 185   1         SendByte(sla);             /*发送器件地址*/
 186   1         if(ack==0)return(0);
 187   1      
 188   1         for(i=0;i<no;i++)
 189   1         {   
 190   2           SendByte(*s);            /*发送数据*/
 191   2           if(ack==0)return(0);
 192   2           s++;
 193   2         } 
 194   1         Stop_I2c();                /*结束总线*/ 
 195   1         return(1);
 196   1      }
 197          
 198           
 199          
 200           
 201          
 202          /*******************************************************************
 203                              向无子地址器件读字节数据函数               
 204          函数原型: bit  IRcvByte(uchar sla,ucahr *c);  
 205          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 206                    址sla，返回值在c.
 207                     如果返回1表示操作成功，否则操作有误。
 208          注意：    使用前必须已结束总线。
 209          ********************************************************************/
 210          bit IRcvByte(unsigned char sla,unsigned char *m)
 211          {
 212   1         Start_I2c();                /*启动总线*/
 213   1         SendByte(sla);            /*发送器件地址*/
 214   1         if(ack==0)return(0);
 215   1         else
 216   1         {
 217   2         *m=RcvByte();               /*读取数据*/
 218   2         Ack_I2c(1);                 /*发送非就答位*/
 219   2         Stop_I2c();                 /*结束总线*/ 
 220   2         return(1);
 221   2         }
 222   1      }
 223          
 224           
 225          
 226          /*******************************************************************
 227                              向有子地址器件读取多字节数据函数               
 228          函数原型: bit  ISendStr(uchar sla,uchar suba,ucahr *s,uchar no);  
 229          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 230                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 231                     如果返回1表示操作成功，否则操作有误。
 232          注意：    使用前必须已结束总线。
 233          ********************************************************************/
 234          bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 235          {
 236   1         unsigned char i;
 237   1      
 238   1         Start_I2c();                  /*启动总线*/
 239   1         SendByte(sla);                /*发送器件地址*/
 240   1         if(ack==0)return(0);
C51 COMPILER V9.60.0.0   PCF8574                                                           02/02/2021 11:31:49 PAGE 5   

 241   1         SendByte(suba);               /*发送器件子地址*/
 242   1         if(ack==0)return(0);
 243   1      
 244   1         Start_I2c();    /*重新启动总线*/
 245   1         SendByte(sla+1);
 246   1         if(ack==0)return(0);
 247   1         for(i=0;i<no-1;i++)
 248   1         {   
 249   2           *s=RcvByte();               /*发送数据*/
 250   2            Ack_I2c(0);                /*发送就答位*/  
 251   2           s++;
 252   2         } 
 253   1         *s=RcvByte();
 254   1         Ack_I2c(1);                   /*发送非应位*/
 255   1         Stop_I2c();                   /*结束总线*/ 
 256   1         return(1);
 257   1      }
 258          
 259          
 260          /*******************************************************************
 261                              向无子地址器件读取多字节数据函数               
 262          函数原型: bit  ISendStrExt(uchar sla,ucahr *s,uchar no);  
 263          功能:     从启动总线到发送地址,读数据,结束总线的全过程.
 264                    从器件地址sla，读出的内容放入s指向的存储区，
 265                    读no个字节。如果返回1表示操作成功，否则操作有误。
 266          注意：    使用前必须已结束总线。
 267          ********************************************************************/
 268          bit IRcvStrExt(unsigned char sla,unsigned char *s,unsigned char no)
 269          {
 270   1         unsigned char i;
 271   1      
 272   1         Start_I2c();
 273   1         SendByte(sla+1);
 274   1         if(ack==0)return(0);
 275   1      
 276   1         for(i=0;i<no-1;i++)
 277   1         {   
 278   2            *s=RcvByte();               /*发送数据*/
 279   2            Ack_I2c(0);                 /*发送就答位*/  
 280   2            s++;
 281   2         } 
 282   1         *s=RcvByte();
 283   1         Ack_I2c(1);                    /*发送非应位*/
 284   1         Stop_I2c();                    /*结束总线*/ 
 285   1         return(1);
 286   1      }
 287          
 288          void LCD1602_Write_Char(unsigned char address, unsigned char dat)
 289          {
 290   1              Start_I2c();
 291   1              SendByte(address);      //A2A1A0都接地时，地址为0x40
 292   1              Ack_I2c(1);
 293   1              SendByte(dat);          //要发送的8位数据，对芯片P7-P0控制
 294   1              Ack_I2c(1);
 295   1              Stop_I2c();
 296   1      }
 297          
 298          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    823    ----
C51 COMPILER V9.60.0.0   PCF8574                                                           02/02/2021 11:31:49 PAGE 6   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      38
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
